openapi: 3.0.0

info:
  title: VK API
  description: Current API describes interaction with VK
  version: 1.0.0

paths:
  /friends?id=...:
    post:
      summary: Add user in friends
      description: Method add user in friends
      tags:
        - Users
      responses:
        200:
          description: Ok
        400:
          description: Bad Request
        500:
          description: Server error
    delete:
      summary: Delete user in friends
      desctiption: Method delete user in friends
      tags:
        - Users
      responses:
        200:
          description: Ok
        400:
          description: Bad Request
        500:
          description: Server error
    get:
      summary: Request list friends
      description: Method request list friendsl
      tags:
        - Users
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/definitions/User'
        404:
          description: Not found
        500:
          description: Server error
  /{id}:
    get:
      summary: Request profile user
      description: Method request profile user
      tags:
        - Users
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/definitions/User'
        404:
          description: Not found
        500:
          description: Server error
  /feed:
    post:
      summary: Add a post to the author's feed
      description: Method add a post to the author's feed
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/definitions/Publication'
      responses: 
        200:
          description: OK
        404:
          description: Not found
        500:
          description: Server error
    get:
      summary: Post list query
      description: Method post list query
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties: 
                section:
                  type: string
                  enum: [recomended, user]
      responses: 
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/definitions/Publication'
        404:
          description: Not found
        500:
          description: Server error
  /feed/{id}:
    patch:
      summary: Update a post to the author's feed
      description: Method update a post to the author's feed
      tags:
        - Feed
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                media:
                  type: array
                  items:
                    $ref: '#/definitions/Media'
      responses: 
        200:
          description: OK
        404:
          description: Not found
        500:
          description: Server error
    delete:
      summary: Delete a post to the author's feed
      description: Method delete a post to the author's feed
      tags:
        - Feed
      responses: 
        200:
          description: OK
        404:
          description: Not found
        500:
          description: Server error

  /communications/:
    get:
      summary: Dialog list request
      descriptions: Method dialog list request
      tags:
        - Communication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                count_last_message:
                  type: integer
                  format: uint32
                  description: Number of preloaded messages in dialogs
      responses: 
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/definitions/Communication'
        404:
          description: Not found
        500:
          description: Server error
  /communications/{id}:
    get:
      summary: Message list request
      descriptions: Method message list request
      tags:
        - Communication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                last_message_id:
                  type: string
                  description: ID of the last loaded message
                count:
                  type: integer
                  format: uint32
                  description: Number of downloaded messages
      responses: 
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/definitions/Message'
        404:
          description: Not found
        500:
          description: Server error
    post:
      summary: Send message into communication
      description: Method send message into communication
      tags:
        - Communication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/definitions/Message'
      responses: 
        200:
          description: OK
        404:
          description: Not found
        500:
          description: Server error
    patch:
        summary: Reading message in communication
        description: Method reading message in communication
        tags:
          - Communication
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  message_ids:
                    type: array
                    items:
                      id:
                        type: string
                    description: Read messages
        responses: 
          200:
            description: OK
          404:
            description: Not found
          500:
            description: Server error

definitions:
  User:
    properties:
      id:
        type: string
        description: A unique identifier representing a specific user
      name:
        type: string
        desctiption: FIO
      age:
        type: integer
        format: uint8
        description: User age
      city:
        type: string
        description: city of user
      description:
        type: string
        description: Description of user
      avatar:
        $ref: '#/definitions/Media'
  Publication:
    properties:
      id:
        type: string
        description: A unique identifier representing a specific publication
      author_id:
        type: string
        description: The unique ID of the post author
      content:
        type: string
        description: Post content
      media:
        type: array
        items: 
          $ref: '#/definitions/Media'

  Media:
    properties:
      media_id:
        type: string
        description: A unique identifier representing a media resource
      url:
        type: string
        description: Media URL
      type:
        type: string
        enum: [image, video, audio , file]

  Communication:
    properties:
      id:
        type: string
        description: A unique identifier representing a communication
      type:
        type: string
        enum: [chat, dialog]
        description: Type of communication. It can be a dialogue or a chat
      members:
        type: array
        items:
          $ref: '#/definitions/User'
        description: Participants of communication
      last_message_timestamp:
        type: integer
        format: uint64
        description: Date of the last message
      last_messages:
        type: array
        items:
          $ref: '#/definitions/Message'
      
  Message:
    properties:
      id:
        type: string
        description: A unique identifier representing a message
      sender_id:
        type: string
        description: The unique ID of the sender of the message
      communication_id:
        type: string
        description: The unique ID of the sender of the communication
      content:
        type: string
        description: Message content
      media:
        type: array
        items:
          $ref: '#/definitions/Media'
        description: Media message files
      sent_timestamp:
        type: integer
        format: uint64
        description: Message sent time
      read:
        type: boolean
        description: Message has been read