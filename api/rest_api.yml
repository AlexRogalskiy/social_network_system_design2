openapi: 3.0.0

info:
  title: VK API
  description: Current API describes interaction with VK
  version: 1.0.0

paths:
  /friends/{id}:
    post:
      summary: Add user in friends
      description: Method add user in friends
      tags:
        - Users
      parameters:
      - name: id
        in: path
        required: true
        description: Unique user ID
        schema:
            type : string
      - name: friend_id
        in: query
        description: The unique identifier of the user who is added as a friend
        schema:
          type: string
      responses:
        200:
          description: Ok
        400:
          description: Bad Request
        500:
          description: Server error
    delete:
      summary: Delete user in friends
      tags:
        - Users
      parameters:
      - name: id
        in: path
        required: true
        description: Unique user ID
        schema:
            type : string
      - name: friend_id
        in: query
        schema:
          type: string
      responses:
        200:
          description: Ok
        400:
          description: Bad Request
        500:
          description: Server error
    get:
      summary: Request list friends
      description: Method request list friendsl
      tags:
        - Users
      parameters:
      - name: id
        in: path
        required: true
        description: Unique user ID
        schema:
            type : string
      - name: friend_id
        in: query
        description: The unique identifier of the user who is added as a friend
        schema:
          type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/User'
        404:
          description: Not found
        500:
          description: Server error
  /profile/{id}:
    get:
      summary: Request profile user
      description: Method request profile user
      tags:
        - Users
      parameters:
      - name: id
        in: path
        required: true
        description: Unique user ID
        schema:
            type : string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: Not found
        500:
          description: Server error
  /feed/{id}:
    post:
      summary: Add a post to the author's feed
      description: Method add a post to the author's feed
      tags:
        - Feed
      parameters:
      - name: id
        in: path
        required: true
        description: User ID for which the feed is being requested
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publication'
      responses: 
        200:
          description: OK
        404:
          description: Not found
        500:
          description: Server error
    get:
      summary: Post list query
      description: Method post list query
      tags:
        - Feed
      parameters:
      - name: id
        in: path
        required: true
        description: User ID for which the feed is being requested
        schema:
          type: string
      - name: section
        in: query
        description: Type of requested feed for a certain user or recommendation feed
        schema:
          type: string
          enum: [recomended, user]
      responses: 
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Publication'
        404:
          description: Not found
        500:
          description: Server error
    patch:
      summary: Update a post to the author's feed
      description: Method update a post to the author's feed
      tags:
        - Feed
      parameters:
      - name: id
        in: path
        required: true
        description: User ID for which the feed is being requested
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                media:
                  type: array
                  items:
                    $ref: '#/components/schemas/Media'
      responses: 
        200:
          description: OK
        404:
          description: Not found
        500:
          description: Server error
    delete:
      summary: Delete a post to the author's feed
      description: Method delete a post to the author's feed
      tags:
        - Feed
      parameters:
      - name: id
        in: path
        required: true
        description: User ID for which the feed is being requested
        schema:
          type: string
      responses: 
        200:
          description: OK
        404:
          description: Not found
        500:
          description: Server error

  /chat/{user_id}:
    get:
      summary: Dialog list request
      description: Method dialog list request
      tags:
        - Chat
      parameters:
      - name: user_id
        in: path
        required: true
        description: User ID for which chats are being requeste
        schema:
          type: string
      - name:  count_last_message
        in: query
        schema:
          type: integer
          format: uint32
        description: Number of preloaded messages in dialogs
      responses: 
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Chat'
        404:
          description: Not found
        500:
          description: Server error
  /chat/{id}:
    get:
      summary: Message list request
      description: Method message list request
      tags:
        - Chat
      parameters:
      - name: id
        in: path
        required: true
        description: Id chat
        schema:
          type: string
      - name: last_message_id
        in: query
        schema:
          type: string
        description: ID of the last loaded message
      - name: count
        in: query
        schema:
          type: integer
          format: uint32
        description: Number of downloaded messages
      responses: 
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        404:
          description: Not found
        500:
          description: Server error
    post:
      summary: Send message into communication
      description: Method send message into communication
      tags:
        - Chat
      parameters:
      - name: id
        in: path
        required: true
        description: Id chat
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses: 
        200:
          description: OK
        404:
          description: Not found
        500:
          description: Server error
    patch:
        summary: Reading message in communication
        description: Method reading message in communication
        tags:
          - Chat
        parameters:
        - name: id
          in: path
          required: true
          description: Id chat
          schema:
            type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  message_ids:
                    type: array
                    items:
                      properties:
                        message_id:
                          type: string
                    description: Read messages
        responses: 
          200:
            description: OK
          404:
            description: Not found
          500:
            description: Server error

  /media/:
    post:
      summary: Add media files
      description: Method add media files
      tags:
        - Media
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                media_file:
                  type: string
                  format: binary
                  description: binary media file
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
        500:
          description: Server error

components:
  schemas:
    Message:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier representing a message
        sender_id:
          type: string
          description: The unique ID of the sender of the message
        chat_id:
          type: string
          description: The unique ID of the sender of the Chat
        content:
          type: string
          description: Message content
        media:
          type: array
          items:
            $ref: '#/components/schemas/Media'
          description: Media message files
        sent_timestamp:
          type: integer
          format: uint64
          description: Message sent time
        read:
          type: boolean
          description: Message has been read
      required:
        - id
    Publication:
      properties:
        id:
          type: string
          description: A unique identifier representing a specific publication
        author_id:
          type: string
          description: The unique ID of the post author
        content:
          type: string
          description: Post content
        media:
          type: array
          items: 
            $ref: '#/components/schemas/Media'
    User:
      properties:
        id:
          type: string
          description: A unique identifier representing a specific user
        name:
          type: string
        age:
          type: integer
          format: uint8
          description: User age
        city:
          type: string
          description: city of user
        description:
          type: string
          description: Description of user
        avatar:
          type: string
          format: binary
          description: User avatar picture
  
    Media:
      properties:
        media_id:
          type: string
          description: A unique identifier representing a media resource
        url:
          type: string
          description: Media URL
        type:
          type: string
          enum: [image, video, audio , file]
  
    Chat:
      properties:
        id:
          type: string
          description: A unique identifier representing a Chat
        type:
          type: string
          enum: [chat, dialog]
          description: Type of Chat. It can be a dialogue or a chat
        members:
          type: array
          items:
            $ref: '#/components/schemas/User'
          description: Participants of Chat
        last_message_timestamp:
          type: integer
          format: uint64
          description: Date of the last message
        last_messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'